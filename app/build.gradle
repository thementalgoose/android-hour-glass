import com.github.triplet.gradle.androidpublisher.ResolutionStrategy

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'de.mannodermaus.android-junit5'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.github.triplet.play'

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "tmg.hourglass"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 20
        versionName "3.1.1"

        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file(System.getenv("KEYSTORE") ?: "hour-glass.keystore")
            storePassword System.getenv("KEYSTORE_PASSWORD")
            keyAlias System.getenv("KEYSTORE_ALIAS")
            keyPassword System.getenv("KEYSTORE_PASSWORD")
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            useProguard false
            firebaseCrashlytics {
                mappingFileUploadEnabled false
            }
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += [
                "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
                "-Xuse-experimental=kotlinx.coroutines.ObsoleteCoroutinesApi",
                "-Xuse-experimental=kotlinx.coroutines.FlowPreview"
        ]
    }

    flavorDimensions 'version'
    productFlavors {
        sand {
            dimension 'version'
            applicationIdSuffix '.sand'
            versionNameSuffix '-sand'

            buildConfigField "int", "ENVIRONMENT", '1'
        }

        live {
            dimension 'version'

            buildConfigField "int", "ENVIRONMENT", '0'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
        androidTest.resources.srcDirs += 'src/androidTest/res'
        test.java.srcDirs += 'src/test/java'
    }

    testOptions {
        junitPlatform {
            testLogging {
                events "skipped", "failed", "standardOut", "standardError"
            }
        }
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
            all {
                afterSuite { desc, result ->
                    if (!desc.parent) {
                        println "\n======================================================================="
                        println "${desc.displayName}"
                        println "Test result: ${result.resultType}"
                        println "Test summary: ${result.testCount} tests, " +
                                "${result.successfulTestCount} succeeded, " +
                                "${result.failedTestCount} failed, " +
                                "${result.skippedTestCount} skipped"
                        println "======================================================================="
                    }
                }
                useJUnitPlatform()
                testLogging {
                    showStandardStreams = true
                    events "skipped", "failed", "standardOut", "standardError"
                }
            }
        }
    }
}

play {
    track = 'internal'
    serviceAccountCredentials = file(System.getenv("PRIVATE_KEY") ?: "hour-glass.json")
    defaultToAppBundles = true
    resolutionStrategy = ResolutionStrategy.IGNORE
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation "androidx.multidex:multidex:2.0.1"
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junit"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"
    testImplementation 'androidx.test:core:1.3.0'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
    testImplementation 'org.mockito:mockito-core:3.0.0'
    kaptTest "androidx.lifecycle:lifecycle-compiler:2.2.0"

    // Firebase
    implementation 'com.google.firebase:firebase-analytics:18.0.0'
    implementation 'com.google.firebase:firebase-crashlytics:17.3.0'

    // Preferences
    implementation "androidx.preference:preference-ktx:1.1.1"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0-beta01"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.3.0-beta01"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.3.0-beta01"

    // Material components
    implementation 'com.google.android.material:material:1.3.0-alpha04'

    // ConstraintLayout
    implementation "androidx.constraintlayout:constraintlayout:2.0.4"

    // ThreeTen
    implementation "com.jakewharton.threetenabp:threetenabp:$threeten"
    testImplementation ("org.threeten:threetenbp:$threetenbp") {
        exclude group:'com.jakewharton.threetenabp', module:'threetenabp'
    }

    // BugShaker
    implementation 'com.github.stkent:bugshaker:1.4.1'

    // Koin for Android
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-androidx-scope:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    implementation "org.koin:koin-androidx-fragment:$koin_version"

    // TMG
    implementation 'com.github.thementalgoose:android-components:3.0.0'
    implementation 'com.github.thementalgoose:android-utilities:2.0.1'
    implementation 'com.github.thementalgoose:android-labelled-progress-bar:1.0.3'

    // ColorSheet
    implementation 'petrov.kristiyan:colorpicker-library:1.1.10'

    // SmoothDateRangePicker
    implementation 'com.leavjenn.smoothdaterangepicker:library:0.2.0'


}