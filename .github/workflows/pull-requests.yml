name: Pull Request
'on':
  pull_request:
    branches:
      - main
jobs:

  discord_test:
    runs-on: ubuntu-latest
    if: always()
    steps:

      - name: Release information
        run: |
          echo "versionCode=$(echo `sh ./scripts/getVersionCode.sh`)" >> $GITHUB_ENV
          echo "versionName=$(echo `sh ./scripts/getVersionName.sh`)" >> $GITHUB_ENV

      - name: Notify discord of failure
        uses: sarisia/actions-status-discord@v1
        if: failure()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          nodetail: true
          title: "Release ${{ env.versionName }} (${{ env.versionCode }}) deployment to internal test track failed"
          description: "Run number ${{ github.run_number }} [Actions](https://github.com/thementalgoose/android-hour-glass/actions)"
          color: 0xff91a4

      - name: Notify discord of success
        uses: sarisia/actions-status-discord@v1
        if: success()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          nodetail: true
          title: "Release ${{ env.versionName }} (${{ env.versionCode }}) deployment to internal test track successful"
          description: "Run number ${{ github.run_number }} [Actions](https://github.com/thementalgoose/android-hour-glass/actions)"
          color: 0x35a55f

  json_checker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: json-syntax-check
        uses: limitusus/json-syntax-check@v1
        with:
          pattern: "\\.json$"

  unit_tests:
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - uses: actions/checkout@v2

      # Caching gradle
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Running unit tests
      - name: Unit tests
        run: ./gradlew testSandDebugUnitTest

      # Publish test reports
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v2
        if: always()
        with:
          report_paths: '**/build/test-results/**/TEST-*.xml'

  discord_notify:
    runs-on: ubuntu-latest
    needs: [unit_tests,json_checker]
    if: failure()
    steps:
      - name: Notify discord of failure
        uses: sarisia/actions-status-discord@v1
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          title: "Pull request has failing tests"
          color: 0xff91a4